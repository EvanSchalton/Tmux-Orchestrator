# Pre-commit hooks for code quality - CENTRALIZED THROUGH TASKS.PY
# Install with: poetry run pre-commit install
# All hooks call invoke commands to ensure CI/CD consistency
exclude: |
  (?x)^(
    .*\.lock$|
    \.tmux_orchestrator/.*\.lock$|
    \.tmux_orchestrator/idle-monitor\.(heartbeat|start\.lock|startup\.lock)$
  )
repos:
  # All quality checks centralized through tasks.py invoke commands
  - repo: local
    hooks:
      # Code formatting via invoke
      - id: format
        name: Format code with ruff (via invoke)
        entry: poetry run invoke format --check
        language: system
        types: [python]
        pass_filenames: false

      # Linting via invoke
      - id: lint
        name: Lint code with ruff (via invoke)
        entry: poetry run invoke lint
        language: system
        types: [python]
        pass_filenames: false

      # Type checking via invoke
      - id: type-check
        name: Type check with mypy (via invoke)
        entry: poetry run invoke type-check
        language: system
        types: [python]
        pass_filenames: false

      # Security checks via invoke
      - id: security
        name: Security scan with bandit (via invoke)
        entry: poetry run invoke security
        language: system
        types: [python]
        pass_filenames: false

      # Test validation via invoke (quick subset for pre-commit performance)
      - id: quick-test
        name: Quick test validation (via invoke)
        entry: poetry run invoke quick
        language: system
        types: [python]
        pass_filenames: false

  # General file checks (keep external as they're not Python-specific)
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: debug-statements
      - id: check-json
      - id: mixed-line-ending
