{
  "tests/compaction_detection_realistic_test.py": [
    "test_compaction_state_detection",
    "test_idle_without_compacting",
    "test_compaction_near_input_detection",
    "test_compaction_detection_edge_cases"
  ],
  "tests/compaction_detection_simple_test.py": [
    "test_compaction_prevents_idle_alert",
    "test_truly_idle_without_compacting"
  ],
  "tests/compaction_detection_test.py": [
    "test_compacting_check_case_insensitive",
    "test_truly_idle_without_compacting",
    "test_detects_compacting_above_input_box",
    "test_compacting_only_checked_near_input_box"
  ],
  "tests/integration_combined_features_test.py": [
    "test_edge_case_compaction_during_rate_limit_message",
    "test_recovery_after_combined_issues",
    "test_performance_with_both_features",
    "test_compaction_after_rate_limit_reset",
    "test_multiple_agents_mixed_states",
    "test_logging_consistency",
    "test_rate_limit_during_compaction"
  ],
  "tests/integration_compaction_test.py": [
    "test_compacting_keyword_detection_simple",
    "test_false_positive_prevention",
    "test_performance_impact_minimal",
    "test_agent_not_idle_during_compaction",
    "test_integration_with_idle_detection",
    "test_compaction_message_formats",
    "test_compaction_with_thinking_indicators",
    "test_appropriate_logging_for_compaction",
    "test_compaction_near_input_box"
  ],
  "tests/integration_rate_limit_test.py": [
    "test_daemon_pauses_on_rate_limit_detection",
    "test_pm_notification_format_and_content",
    "test_rate_limit_detection_accuracy",
    "test_edge_case_no_pm_available",
    "test_resume_notification_after_timeout",
    "test_edge_case_malformed_reset_time",
    "test_sleep_duration_calculation_integration",
    "test_edge_case_multiple_agents_rate_limited",
    "test_agents_responsive_after_reset",
    "test_logging_appropriateness"
  ],
  "tests/monitor_auto_recovery_test.py": [
    "test_restart_timeout_handling",
    "test_recovery_exception_handling",
    "test_restart_command_sequence",
    "test_recovery_with_custom_error_states",
    "test_restart_failure_notifies_pm",
    "test_restart_cooldown_mechanism",
    "test_concurrent_recovery_protection",
    "test_recovery_during_startup",
    "test_recovery_clears_idle_tracking",
    "test_restart_error_detection",
    "test_multiple_agent_recovery",
    "test_crashed_agent_auto_restart"
  ],
  "tests/monitor_crash_detection_test.py": [
    "test_at_symbol_in_prompt_not_crash",
    "test_auto_submit_counter_reset_on_activity",
    "test_terminal_history_with_bash_prompt",
    "test_auto_submit_cooldown",
    "test_auto_submit_uses_enter_key",
    "test_mixed_content_with_at_symbol",
    "test_false_positive_security_tool_output",
    "test_unicode_bash_prompts",
    "test_monitor_cycle_with_at_symbol_agents",
    "test_false_positive_claude_with_script_output",
    "test_multiline_bash_history",
    "test_actual_bash_prompt_is_crash",
    "test_partial_claude_ui_not_crash",
    "test_empty_content_handling",
    "test_special_characters_in_prompt",
    "test_at_symbol_in_claude_content_not_crash"
  ],
  "tests/monitor_daemon_resume_test.py": [
    "test_daemon_notifies_pm_after_resume",
    "test_sleep_duration_calculation_in_daemon",
    "test_monitor_cycle_returns_after_rate_limit",
    "test_daemon_resumes_after_rate_limit"
  ],
  "tests/monitor_fixtures_dynamic_test.py": [],
  "tests/monitor_helpers_test.py": [
    "test_detect_active_from_starting",
    "test_crashed_agent_no_interface",
    "test_single_snapshot_not_idle",
    "test_network_error_detected",
    "test_detect_message_queued_state",
    "test_permission_denied_detected",
    "test_message_queued_full_flow",
    "test_timeout_error_detected",
    "test_crashed_agent_full_flow",
    "test_bash_prompt_is_crashed",
    "test_length_difference",
    "test_crashed_needs_recovery",
    "test_detect_crashed_state",
    "test_identical_snapshots_are_idle",
    "test_normal_content_not_crash",
    "test_welcome_screen_has_interface",
    "test_empty_prompt",
    "test_empty_snapshots_not_idle",
    "test_active_no_recovery",
    "test_idle_no_recovery",
    "test_no_notify_on_active",
    "test_single_char_difference",
    "test_notify_on_idle",
    "test_command_not_found_no_interface",
    "test_detect_error_state",
    "test_python_traceback_no_interface",
    "test_detect_active_state",
    "test_multiline_message",
    "test_error_needs_recovery",
    "test_command_not_found_is_crash",
    "test_message_queued_no_recovery",
    "test_segfault_is_crash",
    "test_changing_snapshots_not_idle",
    "test_notify_on_error",
    "test_healthy_agent_has_interface",
    "test_notify_on_crash",
    "test_idle_agent_full_flow",
    "test_no_prompt",
    "test_minor_length_difference",
    "test_minor_changes_are_idle",
    "test_multiple_char_differences",
    "test_normal_content_no_error",
    "test_traceback_is_crash",
    "test_thinking_state_no_message",
    "test_identical_texts_zero_distance",
    "test_single_line_message"
  ],
  "tests/monitor_message_detection_test.py": [],
  "tests/monitor_pm_notifications_test.py": [
    "test_no_pm_found_handling",
    "test_idle_agent_notification_immediate",
    "test_idle_notification_cooldown_from_helper",
    "test_recovery_notification",
    "test_notification_delivery_failure",
    "test_pm_discovery_mechanism",
    "test_pm_self_notification_prevention_still_works",
    "test_no_self_notification_for_pm",
    "test_crash_notification_with_cooldown",
    "test_crash_notification_cooldown_from_helper",
    "test_idle_pm_receives_idle_agent_notifications",
    "test_notification_format",
    "test_full_idle_detection_to_notification_flow"
  ],
  "tests/rate_limit_handling_test.py": [
    "test_rate_limit_with_partial_message",
    "test_extract_standard_times",
    "test_rate_limited_needs_recovery",
    "test_calculate_same_day_future_time",
    "test_empty_fixture_files",
    "test_calculate_next_day_time",
    "test_rate_limited_should_notify_pm",
    "test_calculate_noon_handling",
    "test_invalid_time_format",
    "test_mixed_content_detection",
    "test_extract_case_insensitive",
    "test_standard_rate_limit_detection",
    "test_rate_limit_triggers_daemon_pause",
    "test_rate_limit_notification_format",
    "test_rate_limit_detection_priority",
    "test_false_positive_prevention",
    "test_time_variations_detection",
    "test_extract_no_match",
    "test_resume_notification_format",
    "test_malformed_rate_limit_message",
    "test_calculate_with_minutes",
    "test_pm_notification_during_rate_limit",
    "test_resume_notification_after_sleep",
    "test_no_pm_found_handling",
    "test_calculate_midnight_handling"
  ],
  "tests/rate_limit_test.py": [
    "test_should_notify_pm_for_rate_limited",
    "test_extract_rate_limit_reset_time_invalid",
    "test_monitor_detects_and_handles_rate_limit",
    "test_sleep_calculation_parametrized[23:00-01:00-2.033]",
    "test_extract_rate_limit_reset_time_various_formats",
    "test_sleep_calculation_parametrized[00:30-00:45-0.283]",
    "test_sleep_calculation_parametrized[23:59-00:01-0.067]",
    "test_rate_limit_time_extraction_comprehensive",
    "test_detect_agent_state_rate_limited",
    "test_calculate_sleep_duration_various_times",
    "test_sleep_calculation_parametrized[12:00-12:00-24.033]",
    "test_sleep_calculation_parametrized[14:00-16:00-2.033]",
    "test_sleep_duration_timezone_handling",
    "test_calculate_sleep_duration_edge_cases"
  ],
  "tests/simplified_restart_system_test.py": [
    "test_no_complex_restart_logic_remains",
    "test_no_complex_state_management_remains",
    "test_pm_can_use_manual_restart_command",
    "test_pm_has_team_knowledge_for_roles",
    "test_simplified_approach_benefits",
    "test_daemon_only_detects_and_notifies",
    "test_notification_cooldown_prevents_spam",
    "test_pm_gets_clean_simple_notifications",
    "test_simple_workflow_detect_notify_only",
    "test_clean_separation_of_concerns"
  ],
  "tests/test_cli/agent_test.py": [
    "test_message_function_direct",
    "test_agent_restart_success",
    "test_restart_function_direct",
    "test_agent_attach_success",
    "test_agent_send_custom_delay",
    "test_agent_message_failure",
    "test_agent_send_invalid_target_format_json",
    "test_agent_send_session_not_found",
    "test_send_function_direct",
    "test_agent_send_session_not_found_json",
    "test_agent_send_success",
    "test_agent_restart_failure",
    "test_agent_send_invalid_target_format",
    "test_agent_message_success",
    "test_agent_list_command",
    "test_agent_send_with_pane_target",
    "test_agent_spawn_command",
    "test_agent_group_exists",
    "test_agent_deploy_success",
    "test_agent_send_json_output",
    "test_agent_send_exception_handling",
    "test_agent_status_success"
  ],
  "tests/test_cli/errors_test.py": [
    "test_stats_no_errors",
    "test_recent_no_errors",
    "test_clear_dry_run",
    "test_summary_json_output",
    "test_summary_no_errors",
    "test_clear_no_files",
    "test_recent_with_filters",
    "test_summary_with_errors",
    "test_clear_command",
    "test_recent_with_errors",
    "test_errors_group_help",
    "test_stats_with_errors"
  ],
  "tests/test_cli/execute_test.py": [
    "test_execute_with_team_size",
    "test_execute_with_prd_file",
    "test_execute_with_team_type",
    "test_execute_skip_team_planning",
    "test_execute_function_exists",
    "test_execute_existing_session",
    "test_execute_project_creation",
    "test_execute_nonexistent_file"
  ],
  "tests/test_cli/monitor_test.py": [
    "test_monitor_status_not_running",
    "test_monitor_start_already_running",
    "test_monitor_with_custom_interval",
    "test_monitor_dashboard",
    "test_monitor_stop_success",
    "test_monitor_logs",
    "test_monitor_status_running",
    "test_monitor_group_exists",
    "test_monitor_start_success",
    "test_monitor_stop_not_running"
  ],
  "tests/test_cli/orchestrator_test.py": [
    "test_orchestrator_list",
    "test_orchestrator_status_not_running",
    "test_orchestrator_start_existing_session",
    "test_orchestrator_kill",
    "test_orchestrator_start_new_session",
    "test_orchestrator_restart_via_kill_and_start",
    "test_orchestrator_broadcast",
    "test_orchestrator_group_exists",
    "test_orchestrator_status_running",
    "test_orchestrator_kill_not_running"
  ],
  "tests/test_cli/recovery_test.py": [
    "test_recovery_status",
    "test_recovery_test_comprehensive",
    "test_recovery_stop_daemon",
    "test_recovery_test_single_agent",
    "test_recovery_start_daemon",
    "test_recovery_group_exists",
    "test_recovery_test_no_restart"
  ],
  "tests/test_cli/setup_test.py": [
    "test_setup_vscode_creates_structure",
    "test_setup_tmux_not_installed",
    "test_setup_command",
    "test_setup_vscode_with_project_path",
    "test_setup_vscode_invalid_json",
    "test_setup_vscode_existing_tasks"
  ],
  "tests/test_cli/tasks_test.py": [
    "test_tasks_status_nonexistent_project",
    "test_tasks_create_new_project",
    "test_tasks_archive",
    "test_tasks_status",
    "test_tasks_group_exists",
    "test_tasks_export",
    "test_tasks_generate",
    "test_tasks_create_with_prd_import",
    "test_tasks_distribute",
    "test_tasks_create_existing_project",
    "test_tasks_list"
  ],
  "tests/test_cli/team_test.py": [
    "test_team_status_specific_session",
    "test_team_deploy_frontend",
    "test_team_broadcast",
    "test_team_compose",
    "test_team_group_exists",
    "test_team_recover",
    "test_team_list_all",
    "test_team_list_json",
    "test_team_broadcast_with_failures",
    "test_team_deploy_backend",
    "test_team_deploy_fullstack"
  ],
  "tests/test_cli/vscode_setup_test.py": [
    "test_vscode_setup_existing_file_no_force",
    "test_vscode_setup_custom_project_dir",
    "test_config_command",
    "test_workspace_command",
    "test_vscode_setup_creates_tasks_json",
    "test_generated_tasks_structure",
    "test_workspace_command_custom_name",
    "test_config_command_interactive",
    "test_vscode_setup_minimal_mode",
    "test_extensions_command",
    "test_vscode_setup_help",
    "test_vscode_command_help"
  ],
  "tests/test_core/error_handler_test.py": [
    "test_clear_error_messages",
    "test_get_error_handler_singleton",
    "test_error_classification",
    "test_retry_on_error_decorator",
    "test_handle_error_with_recovery",
    "test_handle_errors_decorator",
    "test_retry_specific_exceptions",
    "test_handle_error_basic",
    "test_get_error_summary",
    "test_recovery_procedures_setup",
    "test_handle_errors_decorator_critical",
    "test_retry_on_error_all_fail",
    "test_exponential_backoff",
    "test_handle_critical_error",
    "test_error_context_additional_info",
    "test_error_logging"
  ],
  "tests/test_core/performance_optimizer_test.py": [
    "test_connection_pool_initialization",
    "test_create_optimized_config_medium",
    "test_batch_send_messages",
    "test_shutdown",
    "test_acquire_release_connection",
    "test_optimize_team_deployment_large",
    "test_get_agent_status_bulk_with_errors",
    "test_get_agent_status_bulk",
    "test_batch_send_messages_disabled",
    "test_performance_metrics",
    "test_optimize_list_operations_with_cache",
    "test_clear_cache",
    "test_optimize_team_deployment_medium",
    "test_connection_pool_exhaustion",
    "test_cache_expiration",
    "test_create_optimized_config_small",
    "test_connection_pool_close",
    "test_create_optimized_config_large",
    "test_optimize_list_operations_parallel",
    "test_optimize_team_deployment_small"
  ],
  "tests/test_core/test_agent_operations/restart_agent_test.py": [
    "test_restart_agent_session_not_found",
    "test_restart_agent_target_parsing[frontend:0-frontend-0]",
    "test_restart_agent_invalid_target_format",
    "test_restart_agent_target_parsing[backend-dev:1-backend-dev-1]",
    "test_restart_agent_success",
    "test_restart_agent_empty_target",
    "test_restart_agent_colon_only_target",
    "test_restart_agent_target_parsing[project-manager:10-project-manager-10]"
  ],
  "tests/test_core/test_recovery/check_agent_health_test.py": [
    "test_check_agent_health_exception_handling",
    "test_check_agent_health_invalid_target_format",
    "test_check_agent_health_healthy_agent",
    "test_agent_health_status_namedtuple_structure",
    "test_check_agent_health_unhealthy_agent",
    "test_check_agent_health_failure_count_reset"
  ],
  "tests/test_core/test_recovery/detect_failure_test.py": [
    "test_detect_failure_with_critical_error",
    "test_detect_failure_with_extended_unresponsiveness",
    "test_has_critical_errors_case_insensitive",
    "test_check_idle_status_agent_is_idle",
    "test_detect_failure_invalid_target_format",
    "test_detect_failure_with_max_failures",
    "test_has_critical_errors_without_error",
    "test_has_critical_errors_with_error",
    "test_has_normal_claude_interface_with_prompt",
    "test_check_idle_status_agent_is_active",
    "test_has_normal_claude_interface_without_markers",
    "test_has_normal_claude_interface_with_assistant_marker",
    "test_detect_failure_healthy_agent"
  ],
  "tests/test_core/test_recovery/discover_agents_test.py": [
    "test_is_claude_agent_empty_content",
    "test_is_claude_agent_with_medium_indicators",
    "test_is_claude_agent_with_insufficient_indicators",
    "test_discover_agents_exception_handling",
    "test_discover_agents_default_excludes",
    "test_discover_agents_empty_sessions",
    "test_is_claude_agent_with_claude_name_and_medium",
    "test_discover_agents_finds_claude_agents",
    "test_is_claude_agent_with_strong_indicators",
    "test_is_claude_agent_exception_handling",
    "test_discover_agents_excludes_sessions"
  ],
  "tests/test_core/test_recovery/restore_context_test.py": [
    "test_restore_context_invalid_target_format",
    "test_restore_context_exception_handling",
    "test_restore_context_success",
    "test_restore_context_with_context_data",
    "test_build_context_message_contains_timestamp",
    "test_restore_context_send_message_failure",
    "test_build_context_message_with_context_data",
    "test_build_context_message_basic",
    "test_build_context_message_empty_context_data"
  ],
  "tests/test_core/test_team_operations/broadcast_to_team_test.py": [
    "test_broadcast_to_team_no_agents",
    "test_broadcast_to_team_all_failures",
    "test_broadcast_to_team_agent_detection[window_names1-1]",
    "test_broadcast_to_team_agent_detection[window_names2-1]",
    "test_broadcast_to_team_agent_detection[window_names3-2]",
    "test_broadcast_to_team_agent_detection[window_names4-2]",
    "test_broadcast_to_team_partial_failure",
    "test_broadcast_to_team_result_structure",
    "test_broadcast_to_team_agent_detection[window_names5-2]",
    "test_broadcast_to_team_session_not_found",
    "test_broadcast_to_team_agent_detection[window_names0-0]",
    "test_broadcast_to_team_success"
  ],
  "tests/test_core/test_team_operations/get_team_status_test.py": [
    "test_determine_window_status[Task completed successfully-False-Complete-Task completed]",
    "test_get_team_status_success",
    "test_determine_window_type[Claude-Frontend-Frontend Dev]",
    "test_determine_window_type[Shell-Window-Shell]",
    "test_get_team_status_no_windows",
    "test_determine_window_type[PM-Window-Project Manager]",
    "test_determine_window_type[Random-Window-Other]",
    "test_determine_window_type[Dev-Server-Dev Server]",
    "test_determine_window_status[Waiting for input-True-Idle-Waiting for task]",
    "test_get_team_status_agent_counting",
    "test_get_team_status_session_info_not_found",
    "test_determine_window_status[Working on code...-False-Active-Working...]",
    "test_determine_window_status[Error: failed to compile-False-Error-Has errors]",
    "test_get_team_status_session_not_found",
    "test_determine_window_type[qa-test-QA Engineer]",
    "test_determine_window_type[claude-backend-Backend Dev]"
  ],
  "tests/test_core/test_team_operations/list_all_teams_test.py": [
    "test_list_all_teams_agent_counting[window_names5-2]",
    "test_list_all_teams_empty",
    "test_list_all_teams_agent_counting[window_names4-2]",
    "test_list_all_teams_agent_counting[window_names0-0]",
    "test_list_all_teams_agent_counting[window_names2-1]",
    "test_list_all_teams_missing_created_field",
    "test_list_all_teams_status_determination[1-Active]",
    "test_list_all_teams_status_determination[None-Active]",
    "test_list_all_teams_status_determination[0-Detached]",
    "test_list_all_teams_agent_counting[window_names1-0]",
    "test_list_all_teams_status_determination[-Active]",
    "test_list_all_teams_success",
    "test_list_all_teams_no_windows",
    "test_list_all_teams_agent_counting[window_names3-1]"
  ],
  "tests/test_integration/end_to_end_test.py": [
    "test_project_archival_workflow",
    "test_agent_communication_workflow",
    "test_task_management_workflow",
    "test_complete_prd_workflow",
    "test_team_deployment_and_recovery",
    "test_monitoring_workflow"
  ],
  "tests/test_server/mcp_server_test.py": [
    "test_main_function",
    "test_server_routes_registration",
    "test_server_info_endpoint",
    "test_openapi_documentation",
    "test_app_with_middleware",
    "test_server_error_handling",
    "test_error_response_format",
    "test_cors_configuration",
    "test_full_server_startup",
    "test_app_configuration",
    "test_health_endpoint"
  ],
  "tests/test_server/routes_basic_test.py": [
    "test_tasks_routes_exist",
    "test_method_not_allowed",
    "test_coordination_routes_exist",
    "test_monitor_routes_exist",
    "test_agents_routes_exist",
    "test_missing_route_404",
    "test_invalid_json_handling",
    "test_openapi_endpoints",
    "test_messages_routes_exist",
    "test_root_endpoint",
    "test_health_endpoint"
  ],
  "tests/test_server/test_tools/assign_task_test.py": [
    "test_get_agent_workload_agent_not_found",
    "test_assign_task_with_completion_criteria",
    "test_assign_task_send_message_fails",
    "test_reassign_task_successful",
    "test_assign_task_load_balancing_metadata",
    "test_assign_task_agent_not_accessible",
    "test_list_available_agents_successful",
    "test_reassign_task_not_found",
    "test_assign_task_empty_agent_id",
    "test_get_agent_workload_successful",
    "test_assign_task_empty_task_id",
    "test_assign_task_invalid_agent_format",
    "test_assign_task_invalid_priority",
    "test_assign_task_save_assignment_fails",
    "test_assign_task_exception_handling",
    "test_assign_task_with_dependencies",
    "test_assign_task_successful_assignment",
    "test_assign_task_all_valid_priorities[high]",
    "test_assign_task_all_valid_priorities[critical]",
    "test_list_available_agents_with_role_filter",
    "test_assign_task_all_valid_priorities[low]",
    "test_assign_task_all_valid_priorities[medium]"
  ],
  "tests/test_server/test_tools/broadcast_message_test.py": [
    "test_broadcast_message_session_not_found",
    "test_broadcast_message_with_exclusions",
    "test_broadcast_message_partial_failure",
    "test_broadcast_message_empty_message",
    "test_broadcast_message_no_claude_windows",
    "test_broadcast_message_urgent_flag",
    "test_broadcast_message_multiple_agent_types",
    "test_broadcast_message_with_agent_type_filter",
    "test_broadcast_message_to_all_agents",
    "test_broadcast_message_urgent_formatting",
    "test_broadcast_message_exception_handling",
    "test_broadcast_message_cross_session_role"
  ],
  "tests/test_server/test_tools/create_pull_request_test.py": [
    "test_create_pull_request_with_labels",
    "test_create_pull_request_various_body_formats[Description with [links](https://example.com)]",
    "test_create_pull_request_uncommitted_changes",
    "test_create_pull_request_empty_title",
    "test_create_pull_request_exception_handling",
    "test_create_pull_request_draft_mode",
    "test_create_pull_request_successful",
    "test_link_pr_to_tasks_partial_failure",
    "test_create_pull_request_gh_not_installed",
    "test_create_pull_request_empty_base_branch",
    "test_create_pull_request_quality_checks_fail",
    "test_link_pr_to_tasks_successful",
    "test_get_pr_status_successful",
    "test_create_pull_request_various_body_formats[## Summary\\n- Point 1\\n- Point 2]",
    "test_run_quality_checks_for_pr_successful",
    "test_create_pull_request_with_assignees",
    "test_create_pull_request_various_body_formats[Multi-line\\ndescription\\nwith details]",
    "test_create_pull_request_with_quality_checks",
    "test_create_pull_request_various_body_formats[Simple description]",
    "test_create_pull_request_empty_head_branch",
    "test_get_pr_status_not_found",
    "test_create_pull_request_not_on_branch"
  ],
  "tests/test_server/test_tools/create_team_test.py": [
    "test_create_team_session_creation_fails",
    "test_create_team_session_already_exists",
    "test_create_team_invalid_agent_count",
    "test_create_team_coordination_strategies",
    "test_create_team_with_metadata",
    "test_create_team_claude_start_fails",
    "test_create_team_invalid_agent_role",
    "test_create_team_all_valid_roles[reviewer]",
    "test_create_team_multiple_agents_same_role_success",
    "test_create_team_empty_members",
    "test_create_team_all_valid_roles[pm]",
    "test_create_team_edge_case_maximum_agents",
    "test_create_team_all_valid_roles[researcher]",
    "test_create_team_empty_team_name",
    "test_create_team_too_many_agents",
    "test_create_team_mixed_roles_success",
    "test_create_team_all_valid_roles[docs]",
    "test_create_team_exception_handling",
    "test_create_team_custom_session_assignments",
    "test_create_team_single_agent_success",
    "test_create_team_all_valid_roles[qa]",
    "test_create_team_partial_failure_recovery",
    "test_create_team_metadata_persistence",
    "test_create_team_window_creation_fails",
    "test_create_team_invalid_team_name_format",
    "test_create_team_duplicate_custom_sessions",
    "test_create_team_validates_coordination_strategy",
    "test_create_team_all_valid_roles[devops]",
    "test_create_team_all_valid_roles[developer]"
  ],
  "tests/test_server/test_tools/get_agent_status_test.py": [
    "test_get_agent_status_mixed_health_states_team",
    "test_get_agent_status_activity_file_not_exist",
    "test_get_agent_status_unresponsive_agent",
    "test_agent_status_result_team_health",
    "test_agent_health_metrics_full",
    "test_agent_status_request_post_init_defaults",
    "test_get_agent_status_blocked_agent_from_activity",
    "test_get_agent_status_agent_not_found",
    "test_health_status_values",
    "test_agent_status_request_team_health_check",
    "test_agent_status_result_failure",
    "test_agent_status_request_by_target",
    "test_get_agent_status_json_decode_error",
    "test_get_agent_status_invalid_agent_id_empty",
    "test_get_agent_status_unexpected_error",
    "test_get_agent_status_invalid_multiple_criteria",
    "test_agent_status_request_single_agent",
    "test_agent_health_metrics_minimal",
    "test_get_agent_status_team_health_check",
    "test_get_agent_status_degraded_health_from_tmux_status",
    "test_get_agent_status_file_permission_error",
    "test_get_agent_status_empty_team",
    "test_get_agent_status_single_agent_by_id_success",
    "test_get_agent_status_offline_agent",
    "test_get_agent_status_invalid_no_criteria",
    "test_get_agent_status_single_agent_by_target_success",
    "test_get_agent_status_invalid_target_format",
    "test_get_agent_status_responsiveness_score_calculation",
    "test_agent_status_result_success_single",
    "test_get_agent_status_include_activity_history"
  ],
  "tests/test_server/test_tools/get_messages_test.py": [
    "test_get_messages_session_not_found",
    "test_get_messages_empty_pane",
    "test_get_messages_limited_lines",
    "test_get_messages_since_timestamp",
    "test_get_messages_invalid_target",
    "test_get_messages_claude_ui_format",
    "test_get_messages_with_timestamps",
    "test_get_messages_role_filter",
    "test_get_messages_system_messages",
    "test_get_messages_human_assistant_conversation",
    "test_get_messages_with_filter",
    "test_get_messages_exception_handling"
  ],
  "tests/test_server/test_tools/get_session_status_test.py": [
    "test_get_session_status_with_mixed_agent_statuses",
    "test_get_agent_status_whitespace_names",
    "test_get_session_status_agents_failure",
    "test_get_agent_status_with_custom_lines",
    "test_get_agent_status_empty_output",
    "test_get_agent_status_empty_window_name",
    "test_agent_status_result_dataclass",
    "test_get_agent_status_capture_failure",
    "test_session_status_result_dataclass",
    "test_get_session_status_success",
    "test_get_session_status_empty",
    "test_get_agent_status_empty_session_name",
    "test_get_agent_status_idle_agent",
    "test_agent_status_request_defaults",
    "test_get_agent_status_success",
    "test_get_agent_status_session_not_found",
    "test_get_session_status_tmux_failure"
  ],
  "tests/test_server/test_tools/handoff_work_test.py": [
    "test_handoff_work_long_notes",
    "test_handoff_work_invalid_priority",
    "test_handoff_work_all_valid_priorities[medium]",
    "test_handoff_work_send_keys_failure",
    "test_handoff_work_invalid_from_agent_format",
    "test_handoff_work_empty_from_agent",
    "test_handoff_work_context_truncation",
    "test_handoff_work_message_formatting",
    "test_handoff_work_long_work_description",
    "test_handoff_work_from_agent_not_found",
    "test_handoff_work_successful_with_context_preservation",
    "test_handoff_work_empty_to_agent",
    "test_handoff_work_metadata_tracking",
    "test_handoff_work_cross_session_handoff",
    "test_handoff_work_with_additional_notes",
    "test_handoff_work_same_agent",
    "test_handoff_work_successful_basic_handoff",
    "test_handoff_work_to_agent_not_found",
    "test_handoff_work_capture_pane_exception",
    "test_handoff_work_invalid_to_agent_format",
    "test_handoff_work_all_valid_priorities[low]",
    "test_handoff_work_all_valid_priorities[critical]",
    "test_handoff_work_empty_work_description",
    "test_handoff_work_all_valid_priorities[high]"
  ],
  "tests/test_server/test_tools/kill_agent_test.py": [
    "test_kill_agent_force_kill",
    "test_kill_agent_session_not_found",
    "test_kill_agent_graceful_shutdown_success",
    "test_kill_agent_kill_fails",
    "test_kill_agent_unexpected_error",
    "test_kill_agent_pane_target",
    "test_kill_agent_no_pm_found",
    "test_kill_agent_graceful_shutdown_timeout",
    "test_kill_agent_with_pm_notification",
    "test_kill_agent_invalid_target_format"
  ],
  "tests/test_server/test_tools/report_activity_test.py": [
    "test_get_activity_history_empty_file",
    "test_activity_type_values",
    "test_activity_record_creation",
    "test_activity_history_request_full_filters",
    "test_get_activity_history_tags_filter",
    "test_report_activity_file_permission_error",
    "test_activity_history_request_agent_filter",
    "test_report_activity_whitespace_description",
    "test_get_activity_history_limit",
    "test_activity_record_post_init_creates_timestamp",
    "test_get_activity_history_team_filter",
    "test_report_activity_invalid_agent_id_empty",
    "test_get_activity_history_permission_error",
    "test_report_activity_json_decode_error",
    "test_report_activity_success_minimal",
    "test_activity_history_request_defaults",
    "test_activity_record_with_timestamp",
    "test_get_activity_history_all_records",
    "test_report_activity_invalid_agent_id_whitespace",
    "test_report_activity_request_full",
    "test_report_activity_success_full_fields",
    "test_report_activity_unexpected_error",
    "test_report_activity_request_minimal",
    "test_get_activity_history_json_error",
    "test_get_activity_history_activity_type_filter",
    "test_get_activity_history_agent_filter",
    "test_report_activity_empty_description",
    "test_get_activity_history_combined_filters",
    "test_report_activity_file_not_exist",
    "test_report_activity_multiple_agents",
    "test_get_activity_history_file_not_exist",
    "test_get_activity_history_unexpected_error",
    "test_report_activity_all_activity_types",
    "test_get_activity_history_timestamp_filter"
  ],
  "tests/test_server/test_tools/run_quality_checks_test.py": [
    "test_enforce_quality_gates_all_pass",
    "test_run_quality_checks_all_valid_types[type_checking]",
    "test_run_single_check_type_checking",
    "test_run_quality_checks_project_not_found",
    "test_run_quality_checks_all_valid_types[security]",
    "test_run_single_check_tests",
    "test_get_check_results_successful",
    "test_run_single_check_coverage",
    "test_run_quality_checks_all_valid_types[coverage]",
    "test_run_quality_checks_all_valid_types[linting]",
    "test_run_quality_checks_empty_project_path",
    "test_get_check_results_not_found",
    "test_run_quality_checks_invalid_check_type",
    "test_run_quality_checks_all_valid_types[tests]",
    "test_enforce_quality_gates_with_failures",
    "test_run_quality_checks_with_report_to_agent",
    "test_run_single_check_formatting",
    "test_run_single_check_linting",
    "test_run_quality_checks_exception_handling",
    "test_run_quality_checks_fail_fast",
    "test_run_quality_checks_all_valid_types[formatting]",
    "test_run_quality_checks_custom_commands",
    "test_run_quality_checks_with_failures",
    "test_run_quality_checks_successful_all_pass",
    "test_run_single_check_security"
  ],
  "tests/test_server/test_tools/schedule_checkin_test.py": [
    "test_schedule_checkin_request_defaults",
    "test_schedule_checkin_json_error",
    "test_schedule_checkin_success_one_time",
    "test_schedule_checkin_success_weekly",
    "test_schedule_checkin_success_recurring",
    "test_schedule_checkin_empty_message",
    "test_schedule_checkin_recurring_no_interval",
    "test_schedule_checkin_multiple_schedules",
    "test_checkin_schedule_one_time",
    "test_schedule_checkin_request_recurring",
    "test_checkin_schedule_deactivate",
    "test_checkin_schedule_is_due_weekly",
    "test_checkin_schedule_recurring",
    "test_schedule_checkin_weekly_invalid_days",
    "test_schedule_checkin_duplicate_agent_conflict",
    "test_schedule_checkin_update_existing",
    "test_checkin_schedule_is_due_recurring",
    "test_schedule_checkin_file_not_exist",
    "test_schedule_checkin_weekly_no_days",
    "test_schedule_checkin_past_time",
    "test_schedule_checkin_invalid_agent_id",
    "test_schedule_checkin_file_permission_error",
    "test_schedule_checkin_request_weekly",
    "test_checkin_schedule_execute",
    "test_checkin_schedule_is_due_one_time"
  ],
  "tests/test_server/test_tools/send_message_test.py": [
    "test_send_message_empty_target",
    "test_send_message_whitespace_message",
    "test_send_message_complex_target_format",
    "test_send_message_exception",
    "test_send_message_failure",
    "test_send_message_result_dataclass",
    "test_send_message_result_with_error",
    "test_send_message_empty_message",
    "test_send_message_multiline",
    "test_send_message_request_defaults",
    "test_send_message_long_message",
    "test_send_message_invalid_target_formats",
    "test_send_message_special_characters",
    "test_send_message_whitespace_target",
    "test_send_message_success",
    "test_send_message_urgent"
  ],
  "tests/test_server/test_tools/spawn_agent_test.py": [
    "test_spawn_agent_send_keys_fails",
    "test_spawn_agent_all_valid_types[pm]",
    "test_spawn_agent_new_session_success",
    "test_spawn_agent_all_valid_types[researcher]",
    "test_spawn_agent_all_valid_types[developer]",
    "test_spawn_agent_empty_session_name",
    "test_spawn_agent_all_valid_types[reviewer]",
    "test_spawn_agent_invalid_agent_type",
    "test_spawn_agent_all_valid_types[devops]",
    "test_spawn_agent_existing_session_success",
    "test_spawn_agent_all_valid_types[docs]",
    "test_spawn_agent_all_valid_types[qa]",
    "test_spawn_agent_exception_handling",
    "test_spawn_agent_session_creation_fails",
    "test_spawn_agent_window_creation_fails"
  ],
  "tests/test_server/test_tools/track_task_status_test.py": [
    "test_list_tasks_by_status_with_agent_filter",
    "test_track_task_status_all_valid_statuses[in_progress]",
    "test_list_tasks_by_status_successful",
    "test_list_tasks_by_status_all_tasks",
    "test_track_task_status_successful_creation",
    "test_track_task_status_invalid_progress_percentage",
    "test_track_task_status_with_blockers",
    "test_track_task_status_with_progress_percentage",
    "test_track_task_status_invalid_status",
    "test_track_task_status_all_valid_statuses[completed]",
    "test_track_task_status_all_valid_statuses[pending]",
    "test_track_task_status_exception_handling",
    "test_track_task_status_all_valid_statuses[blocked]",
    "test_track_task_status_empty_agent_id",
    "test_get_task_status_not_found",
    "test_update_task_status_successful",
    "test_get_task_status_successful",
    "test_track_task_status_empty_task_id",
    "test_track_task_status_save_failure",
    "test_track_task_status_invalid_agent_format",
    "test_track_task_status_with_completion_notes",
    "test_track_task_status_metadata_tracking",
    "test_update_task_status_not_found",
    "test_track_task_status_all_valid_statuses[cancelled]",
    "test_track_task_status_update_existing"
  ]
}
