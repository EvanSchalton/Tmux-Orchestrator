name: MCP Server Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'tmux_orchestrator/mcp_server.py'
      - 'tmux_orchestrator/mcp_auto_generator.py'
      - 'tests/test_mcp_*.py'
      - '.github/workflows/mcp-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'tmux_orchestrator/mcp_server.py'
      - 'tmux_orchestrator/mcp_auto_generator.py'
      - 'tests/test_mcp_*.py'

jobs:
  test:
    name: Run MCP Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Configure Poetry
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true

    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pypoetry
          .venv
        key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-${{ matrix.python-version }}-

    - name: Install dependencies
      run: poetry install --with dev

    - name: Run MCP unit tests
      run: |
        poetry run pytest tests/test_mcp_server.py tests/test_mcp_commands.py tests/test_mcp_fixes.py \
          -v \
          --tb=short \
          --cov=tmux_orchestrator.mcp_server \
          --cov=tmux_orchestrator.mcp_auto_generator \
          --cov-report=xml \
          --cov-report=term-missing \
          --junit-xml=junit/test-results-${{ matrix.python-version }}.xml

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: junit/test-results-${{ matrix.python-version }}.xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.python-version }}
        fail_ci_if_error: false

  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: poetry install --with dev

    - name: Run performance tests
      run: |
        poetry run pytest tests/test_mcp_server.py::TestPerformanceOptimizations \
          -v \
          --durations=10 \
          --benchmark-only

    - name: Check test execution time
      run: |
        poetry run pytest tests/test_mcp_*.py \
          --durations=0 \
          --timeout=30 \
          -v

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Poetry and tmux
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        sudo apt-get update
        sudo apt-get install -y tmux

    - name: Install package
      run: |
        poetry install --with dev
        poetry build
        pip install dist/*.whl

    - name: Test CLI availability
      run: |
        which tmux-orc
        tmux-orc --version
        tmux-orc reflect --help

    - name: Run integration tests
      run: |
        poetry run pytest tests/test_mcp_server.py::TestCLIArgumentParsing \
          tests/test_mcp_fixes.py::TestIntegrationOfAllFixes \
          -v
